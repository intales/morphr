openapi: 3.0.0
info:
  title: Figma API
  version: 1.0.0
  description: Complete Figma API specification for FigFlow

servers:
  - url: https://api.figma.com

security:
  - PersonalAccessToken: []
  - OAuth2: []

paths:
  /v1/files/{file_key}:
    get:
      tags:
        - Files
      summary: Get file JSON
      security:
        - PersonalAccessToken: []
        - OAuth2: 
            - files:read
      operationId: getFile
      parameters:
        - name: file_key
          in: path
          description: File to export JSON from
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  lastModified:
                    type: string
                    format: date-time
                  version:
                    type: string
                  document:
                    $ref: '#/components/schemas/Document'
                  schemaVersion:
                    type: number
                  styles:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/Style'
        "401":
          description: Authentication failed
        "403":
          description: Permission denied
        "404":
          description: File not found

  /v1/images/{file_key}:
    get:
      tags:
        - Files
      summary: Get images
      security:
        - PersonalAccessToken: []
        - OAuth2: 
            - files:read
      operationId: getImages
      parameters:
        - name: file_key
          in: path
          description: File to export images from
          required: true
          schema:
            type: string
        - name: ids
          in: query
          description: Node IDs to render
          required: true
          schema:
            type: string
        - name: scale
          in: query
          description: Image scaling factor
          schema:
            type: number
            minimum: 0.01
            maximum: 4
        - name: format
          in: query
          description: Image format
          schema:
            type: string
            enum: [jpg, png, svg, pdf]
            default: png
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  images:
                    type: object
                    additionalProperties:
                      type: string
                      format: uri
        "401":
          description: Authentication failed
        "403":
          description: Permission denied
        "404":
          description: File not found

components:
  securitySchemes:
    PersonalAccessToken:
      type: apiKey
      name: X-Figma-Token
      in: header
      description: Personal access token for Figma API
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://www.figma.com/oauth
          tokenUrl: https://www.figma.com/api/oauth/token
          scopes:
            files:read: Read files

  schemas:
    # Base Types
    Document:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [DOCUMENT]
        children:
          type: array
          items:
            $ref: '#/components/schemas/Canvas'

    Canvas:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [CANVAS]
        children:
          type: array
          items:
            $ref: '#/components/schemas/Node'
        backgroundColor:
          $ref: '#/components/schemas/Color'
        prototypeStartNodeID:
          type: string

    Node:
      type: object
      discriminator:
        propertyName: type
      required:
        - id
        - type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - FRAME
            - GROUP
            - RECTANGLE
            - TEXT
            - VECTOR
            - BOOLEAN_OPERATION
            - STAR
            - LINE
            - ELLIPSE
            - REGULAR_POLYGON
            - INSTANCE
            - COMPONENT
            - COMPONENT_SET
            - SECTION
            - STICKY
            - SHAPE_WITH_TEXT
            - CONNECTOR
            - TABLE
            - TABLE_CELL
            - SLICE
        visible:
          type: boolean
          default: true
        locked:
          type: boolean
          default: false
        opacity:
          type: number
          minimum: 0
          maximum: 1
          default: 1
        blendMode:
          $ref: '#/components/schemas/BlendMode'
        preserveRatio:
          type: boolean
          default: false
        layoutAlign:
          type: string
          enum: [INHERIT, STRETCH, MIN, CENTER, MAX]
        constraints:
          $ref: '#/components/schemas/LayoutConstraint'
        transitionNodeID:
          type: string
        transitionDuration:
          type: number
        transitionEasing:
          $ref: '#/components/schemas/EasingType'
        absoluteBoundingBox:
          $ref: '#/components/schemas/Rectangle'
        fills:
          type: array
          items:
            $ref: '#/components/schemas/Paint'
        strokes:
          type: array
          items:
            $ref: '#/components/schemas/Paint'
        strokeWeight:
          type: number
        strokeAlign:
          type: string
          enum: [INSIDE, OUTSIDE, CENTER]
        strokeDashes:
          type: array
          items:
            type: number
        cornerRadius:
          type: number
        rectangleCornerRadii:
          type: array
          items:
            type: number
        exportSettings:
          type: array
          items:
            $ref: '#/components/schemas/ExportSetting'
        effects:
          type: array
          items:
            $ref: '#/components/schemas/Effect'
        isMask:
          type: boolean
          default: false
        layoutMode:
          type: string
          enum: [NONE, HORIZONTAL, VERTICAL]
        primaryAxisSizingMode:
          type: string
          enum: [FIXED, AUTO]
        counterAxisSizingMode:
          type: string
          enum: [FIXED, AUTO]
        primaryAxisAlignItems:
          type: string
          enum: [MIN, CENTER, MAX, SPACE_BETWEEN]
        counterAxisAlignItems:
          type: string
          enum: [MIN, CENTER, MAX]
        paddingLeft:
          type: number
        paddingRight:
          type: number
        paddingTop:
          type: number
        paddingBottom:
          type: number
        itemSpacing:
          type: number
        layoutGrids:
          type: array
          items:
            $ref: '#/components/schemas/LayoutGrid'
        clipsContent:
          type: boolean
          default: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/Node'

    # Styles and Effects
    Style:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        styleType:
          type: string
          enum: [FILL, TEXT, EFFECT, GRID]

    Paint:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [SOLID, GRADIENT_LINEAR, GRADIENT_RADIAL, GRADIENT_ANGULAR, GRADIENT_DIAMOND, IMAGE]
        visible:
          type: boolean
          default: true
        opacity:
          type: number
          minimum: 0
          maximum: 1
          default: 1
        color:
          $ref: '#/components/schemas/Color'
        gradientHandlePositions:
          type: array
          items:
            $ref: '#/components/schemas/Vector'
        gradientStops:
          type: array
          items:
            $ref: '#/components/schemas/ColorStop'
        blendMode:
          $ref: '#/components/schemas/BlendMode'
        imageRef:
          type: string
        imageTransform:
          type: array
          items:
            type: array
            items:
              type: number
        scaleMode:
          type: string
          enum: [FILL, FIT, TILE, STRETCH]
        scalingFactor:
          type: number

    Effect:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum: [DROP_SHADOW, INNER_SHADOW, LAYER_BLUR, BACKGROUND_BLUR]
        visible:
          type: boolean
          default: true
        radius:
          type: number
        color:
          $ref: '#/components/schemas/Color'
        blendMode:
          $ref: '#/components/schemas/BlendMode'
        offset:
          $ref: '#/components/schemas/Vector'
        spread:
          type: number
        showShadowBehindNode:
          type: boolean
          default: false

    # Layout
    LayoutConstraint:
      type: object
      required:
        - vertical
        - horizontal
      properties:
        vertical:
          type: string
          enum: [TOP, BOTTOM, CENTER, SCALE, STRETCH, TOP_BOTTOM]
        horizontal:
          type: string
          enum: [LEFT, RIGHT, CENTER, SCALE, STRETCH, LEFT_RIGHT]

    LayoutGrid:
      type: object
      required:
        - pattern
        - sectionSize
      properties:
        pattern:
          type: string
          enum: [COLUMNS, ROWS, GRID]
        sectionSize:
          type: number
        visible:
          type: boolean
          default: true
        color:
          $ref: '#/components/schemas/Color'
        alignment:
          type: string
          enum: [MIN, MAX, CENTER, STRETCH]
        gutterSize:
          type: number
        offset:
          type: number
        count:
          type: number

    # Export Settings
    ExportSetting:
      type: object
      required:
        - suffix
        - format
        - constraint
      properties:
        suffix:
          type: string
        format:
          type: string
          enum: [JPG, PNG, SVG, PDF]
        constraint:
          $ref: '#/components/schemas/Constraint'

    Constraint:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum: [SCALE, WIDTH, HEIGHT]
        value:
          type: number

    # Basic Types
    Color:
      type: object
      required:
        - r
        - g
        - b
        - a
      properties:
        r:
          type: number
          minimum: 0
          maximum: 1
        g:
          type: number
          minimum: 0
          maximum: 1
        b:
          type: number
          minimum: 0
          maximum: 1
        a:
          type: number
          minimum: 0
          maximum: 1

    Rectangle:
      type: object
      required:
        - x
        - y
        - width
        - height
      properties:
        x:
          type: number
        y:
          type: number
        width:
          type: number
        height:
          type: number

    Vector:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: number
        y:
          type: number

    ColorStop:
      type: object
      required:
        - position
        - color
      properties:
        position:
          type: number
          minimum: 0
          maximum: 1
        color:
          $ref: '#/components/schemas/Color'

    # Enums
    BlendMode:
      type: string
      enum:
        - PASS_THROUGH
        - NORMAL
        - DARKEN
        - MULTIPLY
        - LINEAR_BURN
        - COLOR_BURN
        - LIGHTEN
        - SCREEN
        - LINEAR_DODGE
        - COLOR_DODGE
        - OVERLAY
        - SOFT_LIGHT
        - HARD_LIGHT
        - DIFFERENCE
        - EXCLUSION
        - HUE
        - SATURATION
        - COLOR
        - LUMINOSITY

    EasingType:
      type: string
      enum:
        - EASE_IN
        - EASE_OUT
        - EASE_IN_AND_OUT
        - LINEAR

    TypeStyle:
      type: object
      properties:
        fontFamily:
          type: string
        fontSize:
          type: number
        fontWeight:
          type: number
        textAlignHorizontal:
          type: string
          enum: [LEFT, RIGHT, CENTER, JUSTIFIED]
        textCase:
          type: string
          enum: [UPPER, LOWER, TITLE, SMALL_CAPS]
        textAlignVertical:
          type: string
          enum: [TOP, CENTER, BOTTOM]
        letterSpacing:
          type: number
        lineHeightPx:
          type: number
        italic:
          type: boolean
        fills:
          type: array
          items:
            $ref: '#/components/schemas/Paint'

    VectorProperties:
      type: object
      properties:
        fillGeometry:
          type: array
          items:
            $ref: '#/components/schemas/Path'
        strokeGeometry:
          type: array
          items:
            $ref: '#/components/schemas/Path'
        strokeCap:
          type: string
          enum: [NONE, ROUND, SQUARE, LINE_ARROW, TRIANGLE_ARROW]
        strokeJoin:
          type: string
          enum: [MITER, BEVEL, ROUND]

    Path:
      type: object
      properties:
        path:
          type: string
        windingRule:
          type: string
          enum: [NONZERO, EVENODD]

    ComponentProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentProperty'

    ComponentProperty:
      type: object
      properties:
        type:
          type: string
          enum: [BOOLEAN, INSTANCE_SWAP, TEXT, VARIANT]
        value:
          type: string

    ConnectorProperties:
      type: object
      properties:
        connectorStart:
          $ref: '#/components/schemas/ConnectorEndpoint'
        connectorEnd:
          $ref: '#/components/schemas/ConnectorEndpoint'
        connectorLineType:
          type: string
          enum: [STRAIGHT, ELBOWED]

    ConnectorEndpoint:
      type: object
      properties:
        endpointNodeId:
          type: string
        magnet:
          type: string
          enum: [AUTO, TOP, BOTTOM, LEFT, RIGHT, CENTER]

    TableProperties:
      type: object
      properties:
        numRows:
          type: number
        numColumns:
          type: number
        cellSpacing:
          type: number

    BooleanOperation:
      type: object
      properties:
        operation:
          type: string
          enum: [UNION, INTERSECT, SUBTRACT, EXCLUDE]
        children:
          type: array
          items:
            $ref: '#/components/schemas/Node'
